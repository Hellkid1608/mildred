{
  "{\"sourceRoot\":\"/Users/busolinea/playground/node/parser/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/busolinea/playground/node/parser\",\"filename\":\"/Users/busolinea/playground/node/parser/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/busolinea/playground/node/parser\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/busolinea/playground/node/parser/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/busolinea/playground/node/parser",
      "filename": "/Users/busolinea/playground/node/parser/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/busolinea/playground/node/parser",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/busolinea/playground/node/parser/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/busolinea/playground/node/parser/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/busolinea/playground/node/parser/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _nodeDbf = _interopRequireDefault(require(\"node-dbf\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar fs = require('fs');\n\nvar MongoClient = require('mongodb').MongoClient;\n\nvar url = \"mongodb://localhost:27017\";\nvar app = (0, _express[\"default\"])();\nvar headers = [];\nvar relleno = [];\nvar total = 0;\nfs.readdir('/Users/busolinea/projects/DataBase/', function (err, files) {\n  if (err) return;\n  total = files.length;\n  files.forEach(function (file) {\n    if (file.includes('.dbf') && !files.includes('#')) {\n      var parser = new _nodeDbf[\"default\"]('/Users/busolinea/projects/DataBase/' + file);\n      parser.on('header', function (h) {\n        headers.push(h.fields);\n        console.log(headers.length === total, headers.length, file);\n\n        if (headers.length === total) {\n          JSON.parse(JSON.stringify(headers)).every(function (item) {\n            if (item === headers[0]) {\n              return true;\n            } else {\n              console.log('header distinto de ' + file);\n            }\n          });\n        }\n      });\n      MongoClient.connect(url, function (err, db) {\n        if (err) throw err;\n        var dbo = db.db(\"mildread_staging\");\n        dbo.collection(\"citizen\").find({}, function (err, result) {\n          if (err) throw err;\n          console.log(\"Connection and search success\" + file);\n        });\n      });\n      parser.on('record', function (record) {\n        record.NOM_ASEG = record.NOM_ASEG.replace(/\\$/g, \" \").replace(/\\#/g, \"Ñ\").replace(/\\*/g, \"\").trim();\n        relleno.push(record);\n      }); //console.log(relleno);\n\n      /*MongoClient.connect(url, function(err,db) {\n        if(err) throw err;\n        var dbo = db.db(\"mildread_staging\");\n        dbo.collection(\"citizen\").insertMany(record, function (err,res) {\n          if (err) throw err;\n          console.log(\"Number of documents inserted: \" + res.insertedCount);\n          db.close()\n        })\n      });*/\n\n      parser.parse();\n    } else {\n      total--;\n    }\n  });\n});\napp.get('/', function (req, res) {\n  res.send({\n    mesage: \"Success\",\n    data: relleno\n  });\n});\napp.listen(3000, function () {\n  console.log('Server running on port 3000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJNb25nb0NsaWVudCIsInVybCIsImFwcCIsImhlYWRlcnMiLCJyZWxsZW5vIiwidG90YWwiLCJyZWFkZGlyIiwiZXJyIiwiZmlsZXMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiZmlsZSIsImluY2x1ZGVzIiwicGFyc2VyIiwiUGFyc2VyIiwib24iLCJoIiwicHVzaCIsImZpZWxkcyIsImNvbnNvbGUiLCJsb2ciLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJldmVyeSIsIml0ZW0iLCJjb25uZWN0IiwiZGIiLCJkYm8iLCJjb2xsZWN0aW9uIiwiZmluZCIsInJlc3VsdCIsInJlY29yZCIsIk5PTV9BU0VHIiwicmVwbGFjZSIsInRyaW0iLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwibWVzYWdlIiwiZGF0YSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUNBLElBQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxXQUFyQzs7QUFDQSxJQUFJQyxHQUFHLEdBQUcsMkJBQVY7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFDQSxJQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBLElBQUlDLE9BQU8sR0FBRyxFQUFkO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7QUFFQVAsRUFBRSxDQUFDUSxPQUFILENBQVcscUNBQVgsRUFBaUQsVUFBU0MsR0FBVCxFQUFjQyxLQUFkLEVBQW9CO0FBQ25FLE1BQUdELEdBQUgsRUFBTztBQUNQRixFQUFBQSxLQUFLLEdBQUdHLEtBQUssQ0FBQ0MsTUFBZDtBQUNBRCxFQUFBQSxLQUFLLENBQUNFLE9BQU4sQ0FBYyxVQUFBQyxJQUFJLEVBQUU7QUFDbEIsUUFBSUEsSUFBSSxDQUFDQyxRQUFMLENBQWMsTUFBZCxLQUF1QixDQUFDSixLQUFLLENBQUNJLFFBQU4sQ0FBZSxHQUFmLENBQTVCLEVBQWlEO0FBQy9DLFVBQUlDLE1BQU0sR0FBRyxJQUFJQyxtQkFBSixDQUFXLHdDQUFzQ0gsSUFBakQsQ0FBYjtBQUVBRSxNQUFBQSxNQUFNLENBQUNFLEVBQVAsQ0FBVSxRQUFWLEVBQW9CLFVBQUNDLENBQUQsRUFBTztBQUN6QmIsUUFBQUEsT0FBTyxDQUFDYyxJQUFSLENBQWFELENBQUMsQ0FBQ0UsTUFBZjtBQUNBQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWpCLE9BQU8sQ0FBQ00sTUFBUixLQUFtQkosS0FBL0IsRUFBc0NGLE9BQU8sQ0FBQ00sTUFBOUMsRUFBc0RFLElBQXREOztBQUNBLFlBQUlSLE9BQU8sQ0FBQ00sTUFBUixLQUFtQkosS0FBdkIsRUFBOEI7QUFDNUJnQixVQUFBQSxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxTQUFMLENBQWVwQixPQUFmLENBQVgsRUFBb0NxQixLQUFwQyxDQUEwQyxVQUFBQyxJQUFJLEVBQUk7QUFDaEQsZ0JBQUdBLElBQUksS0FBS3RCLE9BQU8sQ0FBQyxDQUFELENBQW5CLEVBQXVCO0FBQ3JCLHFCQUFPLElBQVA7QUFDRCxhQUZELE1BRUs7QUFDSGdCLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUF1QlQsSUFBbkM7QUFDRDtBQUNGLFdBTkQ7QUFPRDtBQUNGLE9BWkQ7QUFjQVgsTUFBQUEsV0FBVyxDQUFDMEIsT0FBWixDQUFvQnpCLEdBQXBCLEVBQXlCLFVBQVNNLEdBQVQsRUFBY29CLEVBQWQsRUFBa0I7QUFDekMsWUFBR3BCLEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1IsWUFBSXFCLEdBQUcsR0FBR0QsRUFBRSxDQUFDQSxFQUFILENBQU0sa0JBQU4sQ0FBVjtBQUNBQyxRQUFBQSxHQUFHLENBQUNDLFVBQUosQ0FBZSxTQUFmLEVBQTBCQyxJQUExQixDQUErQixFQUEvQixFQUFtQyxVQUFTdkIsR0FBVCxFQUFjd0IsTUFBZCxFQUF1QjtBQUN4RCxjQUFJeEIsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFksVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksa0NBQW1DVCxJQUEvQztBQUNELFNBSEQ7QUFJRCxPQVBEO0FBU0FFLE1BQUFBLE1BQU0sQ0FBQ0UsRUFBUCxDQUFVLFFBQVYsRUFBb0IsVUFBQ2lCLE1BQUQsRUFBWTtBQUM5QkEsUUFBQUEsTUFBTSxDQUFDQyxRQUFQLEdBQWtCRCxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLE9BQWhCLENBQXdCLEtBQXhCLEVBQWdDLEdBQWhDLEVBQXFDQSxPQUFyQyxDQUE2QyxLQUE3QyxFQUFvRCxHQUFwRCxFQUF5REEsT0FBekQsQ0FBaUUsS0FBakUsRUFBd0UsRUFBeEUsRUFBNEVDLElBQTVFLEVBQWxCO0FBQ0EvQixRQUFBQSxPQUFPLENBQUNhLElBQVIsQ0FBYWUsTUFBYjtBQUNELE9BSEQsRUExQitDLENBOEIvQzs7QUFFQTs7Ozs7Ozs7OztBQVVBbkIsTUFBQUEsTUFBTSxDQUFDUyxLQUFQO0FBQ0QsS0EzQ0QsTUEyQ087QUFDTGpCLE1BQUFBLEtBQUs7QUFDTjtBQUNGLEdBL0NEO0FBZ0RELENBbkREO0FBcURBSCxHQUFHLENBQUNrQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFrQjtBQUM3QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFBQ0MsSUFBQUEsTUFBTSxFQUFFLFNBQVQ7QUFBb0JDLElBQUFBLElBQUksRUFBRXJDO0FBQTFCLEdBQVQ7QUFDRCxDQUZEO0FBSUFGLEdBQUcsQ0FBQ3dDLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQU07QUFDckJ2QixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw2QkFBWjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2J1c29saW5lYS9wbGF5Z3JvdW5kL25vZGUvcGFyc2VyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IFBhcnNlciAgZnJvbSAnbm9kZS1kYmYnO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG52YXIgTW9uZ29DbGllbnQgPSByZXF1aXJlKCdtb25nb2RiJykuTW9uZ29DbGllbnQ7XG52YXIgdXJsID0gXCJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3XCI7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5sZXQgaGVhZGVycyA9IFtdXG5sZXQgcmVsbGVubyA9IFtdXG5sZXQgdG90YWwgPSAwXG5cbmZzLnJlYWRkaXIoJy9Vc2Vycy9idXNvbGluZWEvcHJvamVjdHMvRGF0YUJhc2UvJyxmdW5jdGlvbihlcnIsIGZpbGVzKXtcbiAgaWYoZXJyKXJldHVybjsgXG4gIHRvdGFsID0gZmlsZXMubGVuZ3RoXG4gIGZpbGVzLmZvckVhY2goZmlsZT0+e1xuICAgIGlmIChmaWxlLmluY2x1ZGVzKCcuZGJmJykmJiFmaWxlcy5pbmNsdWRlcygnIycpKSB7XG4gICAgICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcignL1VzZXJzL2J1c29saW5lYS9wcm9qZWN0cy9EYXRhQmFzZS8nK2ZpbGUpOyAgICAgIFxuXG4gICAgICBwYXJzZXIub24oJ2hlYWRlcicsIChoKSA9PiB7XG4gICAgICAgIGhlYWRlcnMucHVzaChoLmZpZWxkcylcbiAgICAgICAgY29uc29sZS5sb2coaGVhZGVycy5sZW5ndGggPT09IHRvdGFsLCBoZWFkZXJzLmxlbmd0aCwgZmlsZSlcbiAgICAgICAgaWYgKGhlYWRlcnMubGVuZ3RoID09PSB0b3RhbCkge1xuICAgICAgICAgIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoaGVhZGVycykpLmV2ZXJ5KGl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYoaXRlbSA9PT0gaGVhZGVyc1swXSl7XG4gICAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2hlYWRlciBkaXN0aW50byBkZSAnKyBmaWxlKVxuICAgICAgICAgICAgfSBcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgTW9uZ29DbGllbnQuY29ubmVjdCh1cmwsIGZ1bmN0aW9uKGVyciwgZGIpIHtcbiAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgIHZhciBkYm8gPSBkYi5kYihcIm1pbGRyZWFkX3N0YWdpbmdcIik7XG4gICAgICAgIGRiby5jb2xsZWN0aW9uKFwiY2l0aXplblwiKS5maW5kKHt9LCBmdW5jdGlvbihlcnIsIHJlc3VsdCApIHtcbiAgICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJDb25uZWN0aW9uIGFuZCBzZWFyY2ggc3VjY2Vzc1wiICArIGZpbGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICBwYXJzZXIub24oJ3JlY29yZCcsIChyZWNvcmQpID0+IHtcbiAgICAgICAgcmVjb3JkLk5PTV9BU0VHID0gcmVjb3JkLk5PTV9BU0VHLnJlcGxhY2UoL1xcJC9nICwgXCIgXCIpLnJlcGxhY2UoL1xcIy9nLCBcIsORXCIpLnJlcGxhY2UoL1xcKi9nLCBcIlwiKS50cmltKCk7XG4gICAgICAgIHJlbGxlbm8ucHVzaChyZWNvcmQpXG4gICAgICB9KTtcbiAgICAgIC8vY29uc29sZS5sb2cocmVsbGVubyk7XG4gICAgICBcbiAgICAgIC8qTW9uZ29DbGllbnQuY29ubmVjdCh1cmwsIGZ1bmN0aW9uKGVycixkYikge1xuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgdmFyIGRibyA9IGRiLmRiKFwibWlsZHJlYWRfc3RhZ2luZ1wiKTtcbiAgICAgICAgZGJvLmNvbGxlY3Rpb24oXCJjaXRpemVuXCIpLmluc2VydE1hbnkocmVjb3JkLCBmdW5jdGlvbiAoZXJyLHJlcykge1xuICAgICAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIk51bWJlciBvZiBkb2N1bWVudHMgaW5zZXJ0ZWQ6IFwiICsgcmVzLmluc2VydGVkQ291bnQpO1xuICAgICAgICAgIGRiLmNsb3NlKClcbiAgICAgICAgfSlcbiAgICAgIH0pOyovXG5cbiAgICAgIHBhcnNlci5wYXJzZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0b3RhbC0tO1xuICAgIH1cbiAgfSlcbn0pXG5cbmFwcC5nZXQoJy8nLCBmdW5jdGlvbihyZXEscmVzKSB7XG4gIHJlcy5zZW5kKHttZXNhZ2U6IFwiU3VjY2Vzc1wiLCBkYXRhOiByZWxsZW5vfSlcbn0pO1xuXG5hcHAubGlzdGVuKDMwMDAsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ1NlcnZlciBydW5uaW5nIG9uIHBvcnQgMzAwMCcpXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "fs",
        "require",
        "MongoClient",
        "url",
        "app",
        "headers",
        "relleno",
        "total",
        "readdir",
        "err",
        "files",
        "length",
        "forEach",
        "file",
        "includes",
        "parser",
        "Parser",
        "on",
        "h",
        "push",
        "fields",
        "console",
        "log",
        "JSON",
        "parse",
        "stringify",
        "every",
        "item",
        "connect",
        "db",
        "dbo",
        "collection",
        "find",
        "result",
        "record",
        "NOM_ASEG",
        "replace",
        "trim",
        "get",
        "req",
        "res",
        "send",
        "mesage",
        "data",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/busolinea/playground/node/parser/",
      "sourcesContent": [
        "import express from 'express';\nimport Parser  from 'node-dbf';\nconst fs = require('fs')\nvar MongoClient = require('mongodb').MongoClient;\nvar url = \"mongodb://localhost:27017\";\nconst app = express();\nlet headers = []\nlet relleno = []\nlet total = 0\n\nfs.readdir('/Users/busolinea/projects/DataBase/',function(err, files){\n  if(err)return; \n  total = files.length\n  files.forEach(file=>{\n    if (file.includes('.dbf')&&!files.includes('#')) {\n      let parser = new Parser('/Users/busolinea/projects/DataBase/'+file);      \n\n      parser.on('header', (h) => {\n        headers.push(h.fields)\n        console.log(headers.length === total, headers.length, file)\n        if (headers.length === total) {\n          JSON.parse(JSON.stringify(headers)).every(item => {\n            if(item === headers[0]){\n              return true\n            }else{\n              console.log('header distinto de '+ file)\n            } \n          })\n        }\n      });\n\n      MongoClient.connect(url, function(err, db) {\n        if(err) throw err;\n        var dbo = db.db(\"mildread_staging\");\n        dbo.collection(\"citizen\").find({}, function(err, result ) {\n          if (err) throw err;\n          console.log(\"Connection and search success\"  + file);\n        });\n      });\n\n      parser.on('record', (record) => {\n        record.NOM_ASEG = record.NOM_ASEG.replace(/\\$/g , \" \").replace(/\\#/g, \"Ñ\").replace(/\\*/g, \"\").trim();\n        relleno.push(record)\n      });\n      //console.log(relleno);\n      \n      /*MongoClient.connect(url, function(err,db) {\n        if(err) throw err;\n        var dbo = db.db(\"mildread_staging\");\n        dbo.collection(\"citizen\").insertMany(record, function (err,res) {\n          if (err) throw err;\n          console.log(\"Number of documents inserted: \" + res.insertedCount);\n          db.close()\n        })\n      });*/\n\n      parser.parse();\n    } else {\n      total--;\n    }\n  })\n})\n\napp.get('/', function(req,res) {\n  res.send({mesage: \"Success\", data: relleno})\n});\n\napp.listen(3000, () => {\n  console.log('Server running on port 3000')\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1587493919333
  }
}